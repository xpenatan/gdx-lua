#name: Build and Upload
#
#on:
#  workflow_call:
#    inputs:
#      isRelease:
#        required: true
#        type: boolean
#      shouldUpload:
#        required: true
#        type: boolean
#    secrets:
#      USER:
#        required: true
#      PASSWORD:
#        required: true
#      PGP_SECRET:
#        required: true
#      PGP_PASSPHRASE:
#        required: true
#
#env:
#  RELEASE: ${{ inputs.isRelease }}
#
#jobs:
#  build_Linux:
#    name: Build Windows/Linux
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Cancel Previous Runs
#        uses: styfle/cancel-workflow-action@0.12.0
#        with:
#          access_token: ${{ github.token }}
#
#      - uses: actions/checkout@v3
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          distribution: "zulu"
#          java-version: 11
#
#      - name: Set up MinGW
#        run: |
#          sudo apt install -y --force-yes mingw-w64 lib32z1
#
#      - name: Install emscripten
#        uses: mymindstorm/setup-emsdk@v11
#
#      - name: Install NDK
#        id: setup-ndk
#        uses: nttld/setup-ndk@v1
#        with:
#          ndk-version: r25c
#          add-to-path: false
#
#      - name: Change wrapper permissions
#        run: chmod +x ./gradlew
#
#      - name: Download ImGui source
#        run: ./gradlew :imgui:imgui-build:download_source
#
#      - name: Build ImGui
#        run: ./gradlew :imgui:imgui-build:build_project
#        env:
#          NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
#
#      - name: Build ImLayout library
#        run: ./gradlew :extensions:imlayout:imlayout-build:build_project
#        env:
#          NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
#
#      - name: Download ImGuiColorTextEdit source
#        run: ./gradlew :extensions:ImGuiColorTextEdit:textedit-build:download_source
#
#      - name: Build ImGuiColorTextEdit library
#        run: ./gradlew :extensions:ImGuiColorTextEdit:textedit-build:build_project
#        env:
#          NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
#
#      - name: Download imgui-node-editor source
#        run: ./gradlew :extensions:imgui-node-editor:nodeeditor-build:download_source
#
#      - name: Build imgui-node-editor library
#        run: ./gradlew :extensions:imgui-node-editor:nodeeditor-build:build_project
#        env:
#          NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
#
#      # With all extensions library set we do the final bind that glue them all
#      - name: Build ImGui Extensions
#        run: ./gradlew :imgui-ext:ext-build:build_project
#        env:
#          NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
#
#      - name: Upload imgui natives
#        uses: actions/upload-artifact@v3
#        with:
#          name: imgui-natives
#          path: ./imgui/imgui-build/build/c++/libs/
#
#  build_Mac:
#    name: Build Mac OS
#    runs-on: macos-11
#    needs: build_Linux
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          distribution: "zulu"
#          java-version: 11
#
#      - name: Download imgui natives natives
#        uses: actions/download-artifact@v3
#        with:
#          name: imgui-natives
#          path: ./imgui/imgui-build/build/c++/libs/
#
#      - name: Change wrapper permissions
#        run: chmod +x ./gradlew
#
#      - name: Download ImGui source
#        run: ./gradlew :imgui:imgui-build:download_source
#
#      - name: Build ImGui
#        run: ./gradlew :imgui:imgui-build:build_project
#
#      - name: Build ImLayout library
#        run: ./gradlew :extensions:imlayout:imlayout-build:build_project
#
#      - name: Download ImGuiColorTextEdit source
#        run: ./gradlew :extensions:ImGuiColorTextEdit:textedit-build:download_source
#
#      - name: Build ImGuiColorTextEdit library
#        run: ./gradlew :extensions:ImGuiColorTextEdit:textedit-build:build_project
#
#      - name: Download imgui-node-editor source
#        run: ./gradlew :extensions:imgui-node-editor:nodeeditor-build:download_source
#
#      - name: Build imgui-node-editor library
#        run: ./gradlew :extensions:imgui-node-editor:nodeeditor-build:build_project
#
#      # With all extensions library set we do the final bind that glue them all
#      - name: Build ImGui Extensions
#        run: ./gradlew :imgui-ext:ext-build:build_project
#
#      - name: Upload to repository
#        if: ${{ inputs.shouldUpload }}
#        run: ./gradlew publish
#        env:
#          USER: ${{ secrets.USER }}
#          PASSWORD: ${{ secrets.PASSWORD }}
#          SIGNING_KEY: ${{ secrets.PGP_SECRET }}
#          SIGNING_PASSWORD: ${{ secrets.PGP_PASSPHRASE }}